{
  "openapi": "3.0.0",
  "info": {
    "title": "ZoneID API",
    "description": "\n\nZoneID APIv2 is JSON based RESTful API for managing **Domain**, **Webhosting**, **Cloudserver VPS** and **DNS** services.\n\n# Authorization\n\n**HTTP basic auth** is used for authentication:\n* username is **ZoneID** username\n* password is API key that can be generated under **ZoneID** account management\n\nUse following header:\n\n```Authorization: Basic base64(zoneid_username:zoneid_api_token) ```\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n# URL format and usage\n\nURLs are built as:\n\n```\nhttps://api.zone.eu/v2/{service_type}/{service_name}/{resource_name*}/{resource_identificator*}\n```\n\nWhere\n\n**{service_type}** is\n* Domain: **domain**\n* Webhosting: **vserver**\n* DNS: **dns**\n* Cloudserver VPS: **cloud**\n\n**{service_name}** is\n* Domain: domain name (e.g. **example.com**)\n* Webhosting: virtual server name (e.g. **example.com**)\n* DNS: Nameserver zone name (e.g. **example.com**)\n* Cloudserver VPS: VPS host name (e.g. **uvn-XX-XXX.tll01.zonevs.eu**)\n\nAdditional child endpoints may follow as ```/{child}/{child_identificator*}```\n\n_* optional_\n\nFor example to get single DNS A record, we use following url:\n\n```\nhttps://api.zone.eu/v2/dns/example.com/a/1\n```\n\nor to get all DNS A Records, we use following url:\n\n```\nhttps://api.zone.eu/v2/dns/example.com/a\n```\n\nThere is exception for service ordering endpoints where path is build as:\n\n```\nhttps://api.zone.eu/v2/order/{service_type}\n```\n\n\n# Requests\n\nRequest types are divided into 4 separate HTTP codes.\n\n| Code       | Description |\n|------------|-------------|\n| **GET**     | Access one or more resource. All resources are returned in array. Single resources are returned as single array element. When accessing single resourse, then URL must end with giver resource identificator|\n| **POST**    | Create new resource. Resouce data in JSON structure should be sent in request body. Generated resource is returned in response as single array element.|\n| **PUT**     | Update existing resource. URL must contain given resource identificator of resource that is updated. Otherwise same as POST request |\n| **DELETE**  | Delete existing resource. URL must contain given resource identificator. |\n\n# Responses\n\nStandard HTTP status codes are used to give feedback about operation. In addition, human readable response message is sent in header **X-Status-Message**. Using response message  in your scripts is not recommended as these may change without warning. Descriptions of all HTTP standard status codes are [here](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html). Most commonly used in **ZoneID API** are:\n\n| Code | Description |\n|------|-------------|\n| **200** | successful GET request |\n| **201** | successful POST/PUT request |\n| **202** | successful POST/PUT request in case request was accepted, but will be processed later (for example ordering new services) |\n| **204** | successful DELETE request |\n| **422** | unsuccessful request in case resource in request has validation errors. Error codes in response are in same structure as resource itself. |\n| **400** | unsuccessful request in case request itself is invalid |\n| **402** | unsuccessful request in case payment is required for further actions. Mostly used when package upgrade is required. |\n| **409** | unsuccessful request in case there is a conflict with the current state of the target resource. Mostly it indicates a concurrent request. |\n\n# Rate limit\n\nThe number of request is limited to 60 per minute per IP.\n\nRate limit information is contained in every response headers.\n* **X-Ratelimit-Limit** The number of request that is allowed to be made in a minute\n* **X-Ratelimit-Remaining** The number of remaining requests until reset\n\nIf you have reached the rate limit, then HTTP response code **429** is returned\n\n# Use common sense\n\n**Don't create requests without need.** Don't **update** resources that are not modified and don't ask for data that you already know.\n\nFor example when writing custom dynamic DNS style script for DNS A record, then.\n\n* Update IP only when it's changed and don't post same data again.\n* Keep track of last IP on your side and don't ask it from API after every **n** minutes to compare it with current one.\n\n# Pagination and sorting\n\nOn some GET endpoints we have enabled pagination. In that case there is header **x-pager-enabled** is sent in response.\n\n**Response** headers describing pager:\n\n| Header | Description |\n| ------ | ----------- |\n| **x-pager-enabled** | 1 when pager is enabled |\n| **x-pager-page**    | Current page number     |\n| **x-pager-pages**   | Total number of pages   |\n| **x-pager-limit**   | Items per page          |\n| **x-pager-items**   | Total number of items   |\n\n\n**Request** headers to use pager:\n\n| Header | Description |\n| ------ | ----------- |\n| **x-pager-page**    | Current page number                       |\n| **x-pager-limit**   | Items per page. Default is **10** and maximum is **100**  |\n| **x-order-by**      | Sort by field. Sortable fields are described in Resource documentation |\n| **x-order-dir**     | Sort direction: **asc** or **desc** |\n\n# Examples\n\n\nExample **CURL** request to get DNS A record\n\n```\ncurl -X GET https://api.zone.eu/v2/dns/example.com/a/1 \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: Basic em9uZWRfdXNlcm5hbWU6em9uZWlkX2FwaV9rZXk='\n```\n\nExample **CURL** request to create DNS A record\n\n```\ncurl -X POST https://api.zone.eu/v2/dns/example.com/a \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: Basic em9uZWRfdXNlcm5hbWU6em9uZWlkX2FwaV9rZXk=' \\\n-d '{\"name\": \"prefix.example.com\",\"destination\": \"123.123.123.123\"}'\n```\n\nSuccessful GET, POST and PUT responses always contain requested (or created/updated) resource(s). For example:\n\n```\n[\n    {\n        \"id\": \"123\",\n        \"resource_url\": \"https://api.zone.eu/v2/dns/example.com/a/123\",\n        \"name\": \"prefix.example.com\",\n        \"destination\": \"123.123.123.123\",\n        \"delete\": true,\n        \"modify\": true\n    }\n]\n```\n\n---\n ",
    "contact": {
      "url": "https://www.zone.ee",
      "email": "developers@zone.ee"
    },
    "version": "2.0",
    "x-logo": {
      "url": "https://www.zone.ee/common/img/zone_red_middle_800px.png",
      "altText": "Zone Media OÃœ",
      "backgroundColor": "#FFFFFF",
      "href": "https://www.zone.eu"
    }
  },
  "servers": [
    {
      "url": "https://api.zone.eu/v2"
    }
  ],
  "paths": {
    "/order/cloud": {
      "get": {
        "tags": [
          "Cloudserver order"
        ],
        "summary": "Get cloudserver orders",
        "operationId": "cd313b0ccfe8456ae0b2fbdd24efc669",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloudOrder"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cloudserver order"
        ],
        "summary": "Request/order new virtual machine",
        "operationId": "5491462dbc3fa3e1869a63eee53ecba5",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloudOrder"
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "Cloudserver order"
        ],
        "summary": "Get available virtual machine options",
        "description": "Get list of supported availability zones, packages, operating systems and billing periods",
        "operationId": "da29549208eb3ed2e46a132558e35ea4",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/order/cloud/{identificator}": {
      "get": {
        "tags": [
          "Cloudserver order"
        ],
        "summary": "Get single cloudserver order",
        "operationId": "1b0497fba72a28175aac00b33bed5b17",
        "parameters": [
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloudOrder"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/cloud/{service_name}": {
      "get": {
        "tags": [
          "Cloudserver"
        ],
        "summary": "Display listing of VM cloudservers",
        "operationId": "4851eef037a81aa14c7ef6c9f9f1afa4",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/name_host_ip_filter"
          },
          {
            "$ref": "#/components/parameters/vnc_details"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vm"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cloudserver"
        ],
        "summary": "Delete VM cloudserver",
        "operationId": "8d1bbf549652d49a26d6001361544970",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "process locked"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/cloud/{service_name}/resize": {
      "put": {
        "tags": [
          "Cloudserver"
        ],
        "summary": "Resize VM cloudserver",
        "operationId": "84f2c204e4eae134364f9b532e142b85",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/disk_size"
          },
          {
            "$ref": "#/components/parameters/ram_size"
          },
          {
            "$ref": "#/components/parameters/vcpu_size"
          }
        ],
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vm"
                  }
                }
              }
            }
          },
          "400": {
            "description": "process locked"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          },
          "500": {
            "description": "operation failed"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/cloud/{service_name}/action/{action}": {
      "post": {
        "tags": [
          "Cloudserver"
        ],
        "summary": "Execute specific action for virtual machine",
        "operationId": "7918667afd15c1f2177ddef53ced085c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "name": "action",
            "in": "path",
            "description": "Action type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "start",
                "reboot",
                "shutdown",
                "shutdown_hard"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vm"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "operation failed"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/cloud/{service_name}/{item}/{username}": {
      "put": {
        "tags": [
          "Cloudserver"
        ],
        "summary": "Set virtual machine user password or ssh access key",
        "operationId": "21cf1d0a30613901c59482f8d9fbaadf",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "name": "item",
            "in": "path",
            "description": "Access type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ssh",
                "password"
              ]
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Default OS username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "value": {
                    "description": "SSH or password value",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vm"
                  }
                }
              }
            }
          },
          "400": {
            "description": "process locked"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          },
          "500": {
            "description": "operation failed"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/a": {
      "get": {
        "tags": [
          "A record"
        ],
        "summary": "get Zone A records",
        "operationId": "getdnsarecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "A record"
        ],
        "summary": "Create A record",
        "operationId": "creatednsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ARecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/a/{identificator}": {
      "get": {
        "tags": [
          "A record"
        ],
        "summary": "get A record",
        "operationId": "getdnsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "A record"
        ],
        "summary": "Update A record",
        "operationId": "updatednsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ARecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "A record"
        ],
        "summary": "Delete A record",
        "operationId": "deletednsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/aaaa": {
      "get": {
        "tags": [
          "AAAA record"
        ],
        "summary": "get Zone AAAA records",
        "operationId": "getdnsaaaarecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AAAARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "AAAA record"
        ],
        "summary": "Create AAAA record",
        "operationId": "creatednsaaaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AAAARecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AAAARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/aaaa/{identificator}": {
      "get": {
        "tags": [
          "AAAA record"
        ],
        "summary": "get AAAA record",
        "operationId": "getdnsaaaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AAAARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "AAAA record"
        ],
        "summary": "Update AAAA record",
        "operationId": "updatednsaaaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AAAARecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AAAARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "AAAA record"
        ],
        "summary": "Delete AAAA record",
        "operationId": "deletednsaaaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/ns": {
      "get": {
        "tags": [
          "NS record"
        ],
        "summary": "get Zone NS records",
        "operationId": "getdnsnsrecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NSRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "NS record"
        ],
        "summary": "Create NS record",
        "operationId": "creatednsnsrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NSRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NSRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/ns/{identificator}": {
      "get": {
        "tags": [
          "NS record"
        ],
        "summary": "get NS record",
        "operationId": "getdnsnsrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NSRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "NS record"
        ],
        "summary": "Update NS record",
        "operationId": "updatednsnsrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NSRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NSRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "NS record"
        ],
        "summary": "Delete NS record",
        "operationId": "deletednsnsrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/mx": {
      "get": {
        "tags": [
          "MX record"
        ],
        "summary": "get Zone MX records",
        "operationId": "getdnsmxrecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MXRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "MX record"
        ],
        "summary": "Create MX record",
        "operationId": "creatednsmxrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MXRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MXRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/mx/{identificator}": {
      "get": {
        "tags": [
          "MX record"
        ],
        "summary": "get MX record",
        "operationId": "getdnsmxrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MXRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "MX record"
        ],
        "summary": "Update MX record",
        "operationId": "updatednsmxrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MXRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MXRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MX record"
        ],
        "summary": "Delete MX record",
        "operationId": "deletednsmxrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/cname": {
      "get": {
        "tags": [
          "CNAME record"
        ],
        "summary": "get Zone CNAME records",
        "operationId": "getdnscnamerecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CNAMERecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "CNAME record"
        ],
        "summary": "Create CNAME record",
        "operationId": "creatednscnamerecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CNAMERecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CNAMERecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/cname/{identificator}": {
      "get": {
        "tags": [
          "CNAME record"
        ],
        "summary": "get CNAME record",
        "operationId": "getdnscnamerecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CNAMERecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "CNAME record"
        ],
        "summary": "Update CNAME record",
        "operationId": "updatednscnamerecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CNAMERecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CNAMERecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CNAME record"
        ],
        "summary": "Delete CNAME record",
        "operationId": "deletednscnamerecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/txt": {
      "get": {
        "tags": [
          "TXT record"
        ],
        "summary": "get Zone TXT records",
        "operationId": "getdnstxtrecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TXTRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "TXT record"
        ],
        "summary": "Create TXT record",
        "operationId": "creatednstxtrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TXTRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TXTRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/txt/{identificator}": {
      "get": {
        "tags": [
          "TXT record"
        ],
        "summary": "get TXT record",
        "operationId": "getdnstxtrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TXTRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "TXT record"
        ],
        "summary": "Update TXT record",
        "operationId": "updatednstxtrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TXTRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TXTRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TXT record"
        ],
        "summary": "Delete TXT record",
        "operationId": "deletednstxtrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/caa": {
      "get": {
        "tags": [
          "CAA record"
        ],
        "summary": "get Zone CAA records",
        "operationId": "getdnscaarecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CAARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "CAA record"
        ],
        "summary": "Create CAA record",
        "operationId": "creatednscaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CAARecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CAARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/caa/{identificator}": {
      "get": {
        "tags": [
          "CAA record"
        ],
        "summary": "get CAA record",
        "operationId": "getdnscaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CAARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "CAA record"
        ],
        "summary": "Update CAA record",
        "operationId": "updatednscaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CAARecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CAARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CAA record"
        ],
        "summary": "Delete CAA record",
        "operationId": "deletednscaarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/sshfp": {
      "get": {
        "tags": [
          "SSHFP record"
        ],
        "summary": "get Zone SSHFP records",
        "operationId": "getdnssshfprecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SSHFPRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "SSHFP record"
        ],
        "summary": "Create SSHFP record",
        "operationId": "creatednssshfprecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSHFPRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SSHFPRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/sshfp/{identificator}": {
      "get": {
        "tags": [
          "SSHFP record"
        ],
        "summary": "get SSHFP record",
        "operationId": "getdnssshfprecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SSHFPRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "SSHFP record"
        ],
        "summary": "Update SSHFP record",
        "operationId": "updatednssshfprecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSHFPRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SSHFPRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SSHFP record"
        ],
        "summary": "Delete SSHFP record",
        "operationId": "deletednssshfprecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/srv": {
      "get": {
        "tags": [
          "SRV record"
        ],
        "summary": "get Zone SRV records",
        "operationId": "getdnssrvrecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SRVRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "SRV record"
        ],
        "summary": "Create SRV record",
        "operationId": "creatednssrvrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SRVRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SRVRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/srv/{identificator}": {
      "get": {
        "tags": [
          "SRV record"
        ],
        "summary": "get SRV record",
        "operationId": "getdnssrvrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SRVRecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "SRV record"
        ],
        "summary": "Update SRV record",
        "operationId": "updatednssrvrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SRVRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SRVRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SRV record"
        ],
        "summary": "Delete SRV record",
        "operationId": "deletednssrvrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/url": {
      "get": {
        "tags": [
          "URL record"
        ],
        "summary": "get Zone URL records",
        "operationId": "getdnsurlrecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordUrl"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "URL record"
        ],
        "summary": "Create URL record",
        "operationId": "creatednsurlrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DnsRecordUrl"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordUrl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/url/{identificator}": {
      "get": {
        "tags": [
          "URL record"
        ],
        "summary": "get URL record",
        "operationId": "getdnsurlrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordUrl"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "URL record"
        ],
        "summary": "Update URL record",
        "operationId": "updatednsurlrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DnsRecordUrl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DnsRecordUrl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "URL record"
        ],
        "summary": "Delete URL record",
        "operationId": "deletednsurlrecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/tlsa": {
      "get": {
        "tags": [
          "TLSA record"
        ],
        "summary": "get Zone TLSA records",
        "operationId": "getdnstlsarecords",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TLSARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "TLSA record"
        ],
        "summary": "Create TLSA record",
        "operationId": "creatednstlsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSARecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TLSARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}/tlsa/{identificator}": {
      "get": {
        "tags": [
          "TLSA record"
        ],
        "summary": "get TLSA record",
        "operationId": "getdnstlsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TLSARecord"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "TLSA record"
        ],
        "summary": "Update TLSA record",
        "operationId": "updatednstlsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TLSARecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TLSARecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TLSA record"
        ],
        "summary": "Delete TLSA record",
        "operationId": "deletednstlsarecord",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/dns/{service_name}": {
      "get": {
        "tags": [
          "DNS"
        ],
        "summary": "Get DNS zone",
        "operationId": "d4b40e02c797cfeb0f86c7a2503d2fcd",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DNSZone"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "DNS"
        ],
        "summary": "Update DNS zone",
        "operationId": "040d4c46bd5bc75adb7c2d751092428c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DNSZone"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain/{service_name}/contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get all domain contacts",
        "operationId": "6747f8f83d3ab38ce7249e23b3c00460",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainContact"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create domain contact",
        "description": "NB! fillable and required fields depend on TLD and on data sent (eg. person/company)",
        "operationId": "62a1994fd9d965140e1756defb78610d",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainContact"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainContact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain/{service_name}/contact/{identificator}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get single domain contact",
        "operationId": "478cf14d049eba415e547ea68b96b319",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainContact"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Update domain contact",
        "description": "NB! fillable and required fields depend on TLD and on data sent (eg. person/company)",
        "operationId": "ea7e93e7c5ff64542c1166fb68813765",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainContact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Delete domain contact",
        "operationId": "58391479368291efe540249a834a487d",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "not supported"
          },
          "402": {
            "description": "changing contacts require payment and that's not possible over API."
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain/{service_name}/contact/tech/default": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Add default tech contact",
        "operationId": "4040bb04b00ce0f96f3c6df30f2479c7",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainContact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get all domains",
        "description": "Returns list of all domains that user owns or is delegated to manage. Possible **x-order-by** values are **expires** and **name**.",
        "operationId": "09c78dac2164fbb80ab13c63f018a7be",
        "parameters": [
          {
            "$ref": "#/components/parameters/domain_name"
          },
          {
            "$ref": "#/components/parameters/domain_is_renewable"
          },
          {
            "$ref": "#/components/parameters/domain_is_delegated"
          },
          {
            "$ref": "#/components/parameters/needs_renewal"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          },
          {
            "$ref": "#/components/parameters/x-order-by"
          },
          {
            "$ref": "#/components/parameters/x-order-dir"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain/{service_name}": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get domain",
        "operationId": "084b299b3322b767f3d8945b0402a774",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Domain"
        ],
        "summary": "Update domain",
        "operationId": "f17794d4ac37d4464a3147f719cbc3e1",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "Domain"
        ],
        "summary": "Get domain options",
        "operationId": "66780723653c6ecb261a29f82c456b6c",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "renewal_options": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "action": {
                            "description": "renew|reactivate_redeem|reactivate_grace",
                            "type": "string"
                          },
                          "action_periods": {
                            "description": "action periods and prices",
                            "type": "array",
                            "items": {
                              "properties": {
                                "period": {
                                  "type": "integer"
                                },
                                "expire_new": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": "true"
                                },
                                "price_per_year": {
                                  "type": "number",
                                  "format": "double"
                                },
                                "total_price": {
                                  "type": "number",
                                  "format": "double"
                                },
                                "total_price_with_tax": {
                                  "type": "number",
                                  "format": "double"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "nameserver": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "min": {
                            "type": "integer"
                          },
                          "max": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "contact": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "registrant": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "min": {
                                  "type": "integer"
                                },
                                "max": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "admin": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "min": {
                                  "type": "integer"
                                },
                                "max": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "tech": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "min": {
                                  "type": "integer"
                                },
                                "max": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain/{service_name}/preferences": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get all domain's preferences",
        "description": "Returns all domain preferences",
        "operationId": "942a15347bdf44fcc92a148664bf8e6f",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainPreferences"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Domain"
        ],
        "summary": "Update domain preferences",
        "operationId": "3b23676c3af8be0f58196af7d84c83fc",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainPreferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainPreferences"
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain/{service_name}/nameserver": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get all domain nameservers",
        "operationId": "d796830f044586f79068c390c8856010",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainNameserver"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Domain"
        ],
        "summary": "Create domain nameservers",
        "operationId": "5b5938ad6787dccaa5eb894c417319eb",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DomainNameserver"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainNameserver"
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid input"
          },
          "402": {
            "description": "package upgrade required"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/domain/{service_name}/nameserver/{hostname}": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get single domain nameserver",
        "operationId": "7bc3e3918d9e9423f1934efc6b1fbd91",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/hostname"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainNameserver"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Domain"
        ],
        "summary": "Update domain nameserver",
        "operationId": "ade546319f81dcb89f4a5c5ac5279f79",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/hostname"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainNameserver"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainNameserver"
                }
              }
            }
          },
          "400": {
            "description": "default nameservers cannot be changed"
          },
          "402": {
            "description": "package upgrade required"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Domain"
        ],
        "summary": "Delete domain nameserver",
        "operationId": "acb0e94c3042b925b5c21f281587affb",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/hostname"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "not supported"
          },
          "402": {
            "description": "changing nameservers require payment and that's not possible over API."
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/order/domain/": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get domain orders",
        "operationId": "1ef4cff3b968eb44bc36564e8f0e955b",
        "parameters": [
          {
            "$ref": "#/components/parameters/identificator"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/order/domain/{identificator}": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get domain order by identificator",
        "operationId": "7d457c2ff2a90899a8208dbcfaedaeb4",
        "parameters": [
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Domain"
        ],
        "summary": "Cancel domain order",
        "operationId": "aafda66ff16f4fb4675f6bc59c06e040",
        "parameters": [
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "malformed input"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/order/domain/renew": {
      "post": {
        "tags": [
          "Domain"
        ],
        "summary": "Renew or reactivate a domain",
        "operationId": "fb79e20bac830681b1d35516a05d0a50",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "properties": {
                    "domain": {
                      "description": "Domain name",
                      "type": "string"
                    },
                    "period": {
                      "description": "Renew/reactivate period from Domain Options request",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "malformed input or domain is not renewable"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          },
          "500": {
            "description": "operation failed"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/process/pm2": {
      "get": {
        "tags": [
          "PM2"
        ],
        "summary": "Get PM2 (NodeJS, Python, sh, PHP etc..) moderated applications",
        "operationId": "getpm2applications",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerNodejsApplication"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "PM2"
        ],
        "summary": "Create new PM2 process",
        "operationId": "createpm2application",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerNodejsApplication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerNodejsApplication"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/process/pm2/{identificator}": {
      "get": {
        "tags": [
          "PM2"
        ],
        "summary": "Get specified PM2 (NodeJS, Python, sh, PHP etc..) moderated application",
        "operationId": "getpm2application",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerNodejsApplication"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "PM2"
        ],
        "summary": "Modify and save PM2 process",
        "operationId": "updatepm2application",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          },
          {
            "$ref": "#/components/schemas/VServerNodejsApplication"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerNodejsApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PM2"
        ],
        "summary": "Delete PM2 process",
        "operationId": "deletepm2application",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "another process in action or the app running"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/redis": {
      "get": {
        "tags": [
          "Redis"
        ],
        "summary": "Get Redis database process",
        "operationId": "getredisapplications",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerRedisApplication"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Redis"
        ],
        "summary": "Activate Redis database",
        "operationId": "activateredisapplication",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerRedisApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "402": {
            "description": "package upgrade required"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/redis/{identificator}": {
      "get": {
        "tags": [
          "Redis"
        ],
        "summary": "Get specified Redis database process",
        "operationId": "getredisapplication",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerRedisApplication"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/redis/{identificator}/start": {
      "post": {
        "tags": [
          "Redis"
        ],
        "summary": "Start Redis process",
        "operationId": "startredisapplication",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerRedisApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/process/pm2/{identificator}/start": {
      "post": {
        "tags": [
          "PM2"
        ],
        "summary": "Start PM2 process",
        "operationId": "startpm2application",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerNodejsApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/redis/{identificator}/restart": {
      "post": {
        "tags": [
          "Redis"
        ],
        "summary": "Restart Redis process",
        "operationId": "restartredisapplication",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerRedisApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/process/pm2/{identificator}/restart": {
      "post": {
        "tags": [
          "PM2"
        ],
        "summary": "Restart PM2 process",
        "operationId": "restartpm2application",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerNodejsApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/redis/{identificator}/stop": {
      "post": {
        "tags": [
          "Redis"
        ],
        "summary": "Stop Redis process",
        "operationId": "stopredisapplication",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerRedisApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/process/pm2/{identificator}/stop": {
      "post": {
        "tags": [
          "PM2"
        ],
        "summary": "Stop PM2 process",
        "operationId": "stoppm2application",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerNodejsApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/redis/{identificator}/regenerateauth": {
      "post": {
        "tags": [
          "Redis"
        ],
        "summary": "Generate new Redis auth key",
        "operationId": "generateredisauthkey",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerRedisApplication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/billing/resources": {
      "get": {
        "tags": [
          "Additional package"
        ],
        "summary": "Display listing of additional packages for webhosting service",
        "operationId": "11f0282121aa00eee6542dfc8a0fb429",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalPackage"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Additional package"
        ],
        "summary": "Add additional package for specific virtual server",
        "operationId": "9d5e0e718c248aa988280a9e775c145f",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalPackage"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalPackage"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Package already exists"
          },
          "422": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "Additional package"
        ],
        "summary": "Display available additional package options for specific virtual server",
        "operationId": "9f66dd896f0a5458c295ec34d2bee942",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/billing/resources/{identificator}": {
      "get": {
        "tags": [
          "Additional package"
        ],
        "summary": "Display specific additional package for webhosting service",
        "operationId": "bf9d08172cf7c1e18a388f55f4daa068",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalPackage"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Additional package"
        ],
        "summary": "Edit additional package quantity for specific virtual server",
        "operationId": "fee14cb39b0220a7d13dae6a0030d900",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalPackage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalPackage"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not supported"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Additional package"
        ],
        "summary": "Delete an additional package of a virtual server",
        "operationId": "87321d42303da0bb6b249464eecbc34c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Not found"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/crontab": {
      "get": {
        "tags": [
          "Crontab"
        ],
        "summary": "Display listing of crontabs",
        "operationId": "8ff2eed581bca7f762493100aa8053a7",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerCrontab"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Crontab"
        ],
        "summary": "Create crontab",
        "operationId": "15844b72307e6f85285cf871a82148aa",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerCrontab"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerCrontab"
                  }
                }
              }
            }
          },
          "402": {
            "description": "package upgrade required"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "Crontab"
        ],
        "summary": "Get crontab options",
        "operationId": "fa121f0ca0d7fd34638546eab5c4bc25",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/crontab/{identificator}": {
      "get": {
        "tags": [
          "Crontab"
        ],
        "summary": "Display specific crontab",
        "operationId": "6bbdfd5b3b05540147fdd2de7af0a99f",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerCrontab"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Crontab"
        ],
        "summary": "Update crontab",
        "operationId": "cbe29b918edcb0e8c9ab1e1fcc6f3058",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerCrontab"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerCrontab"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Crontab"
        ],
        "summary": "Delete crontab",
        "operationId": "7efcec0e27477e8d28207b0c4d96363f",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/dedicatedip": {
      "get": {
        "tags": [
          "Dedicated IP"
        ],
        "summary": "Get all dedicated ips",
        "operationId": "b6fa6f65f63bc6ace3d1b6660c67de67",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerDedicatedIP"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Dedicated IP"
        ],
        "summary": "Create dedicated IP",
        "operationId": "08c383084d437b19109cf1e28e96818c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerDedicatedIP"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/dedicatedip/{identificator}": {
      "get": {
        "tags": [
          "Dedicated IP"
        ],
        "summary": "Get specific dedicated ip",
        "operationId": "4a6926856bd4545a264462699bf9d7ad",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerDedicatedIP"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Dedicated IP"
        ],
        "summary": "Delete dedicated IP",
        "operationId": "af2ec4e4751417d460f971494f13f604",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "cannot delete dedicated IP when it is in use"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/account": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Display listing of E-mail accounts",
        "description": "Returns list of emails. Possible **x-order-by** values are **created**, **address** and **disk_usage**.",
        "operationId": "c9490771187d2a1baeb3d572be7c00c1",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/address"
          },
          {
            "$ref": "#/components/parameters/archived"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          },
          {
            "$ref": "#/components/parameters/x-order-by"
          },
          {
            "$ref": "#/components/parameters/x-order-dir"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccount"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "E-mail"
        ],
        "summary": "Create E-mail account",
        "operationId": "76fca2dc00ede81e9b220a27c3c554b9",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "process locked"
          },
          "402": {
            "description": "e-mail account limit exceeded"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/account/{identificator}": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Get specific E-mail account",
        "operationId": "e737e46e25a0474b802c6f3d25a47f7d",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          },
          {
            "$ref": "#/components/parameters/addresses"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccount"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "E-mail"
        ],
        "summary": "Update E-mail account",
        "operationId": "c7654bb5d71761071701568e91ad2889",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccount"
                  }
                }
              }
            }
          },
          "402": {
            "description": "e-mail account limit exceeded"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "E-mail"
        ],
        "summary": "Delete E-mail account",
        "operationId": "df611f388648031caf11e5445d986fd3",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "invalid input"
          },
          "402": {
            "description": "cannot forcedelete nondeleted account"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/forwarder": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Display listing of E-mail forwarders",
        "operationId": "366e3fcb341a21cfbc6dfd438d64695d",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/address"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailForwarder"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "E-mail"
        ],
        "summary": "Create E-mail forwarder",
        "description": "Create E-mail account/forwarder",
        "operationId": "64a783a96f9ca2c53a46ed8273224fd8",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailForwarder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailForwarder"
                  }
                }
              }
            }
          },
          "400": {
            "description": "process locked"
          },
          "402": {
            "description": "e-mail account limit exceeded"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/forwarder/{identificator}": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Get specific E-mail forwarder",
        "operationId": "ba44b184bc3b499531f2e0f2a2174a69",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailForwarder"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "E-mail"
        ],
        "summary": "Update E-mail forwarder",
        "description": "Update E-mail account/forwarder",
        "operationId": "02b663f1107a6dee9ada964b7d948a0f",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailForwarder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailForwarder"
                  }
                }
              }
            }
          },
          "402": {
            "description": "e-mail account limit exceeded"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "E-mail"
        ],
        "summary": "Delete E-mail forwarder",
        "operationId": "f71d20492afb97b74b77137cbf0c3cfc",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "invalid input"
          },
          "402": {
            "description": "cannot force delete nondeleted account"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/account/{identificator}/asp": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Display listing of E-mail app passwords",
        "operationId": "7699f798312832ea2507418e66b9537c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationPassword"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/account/{identificator}/asp/{asp_id}": {
      "delete": {
        "tags": [
          "E-mail"
        ],
        "summary": "Delete E-mail app passsword",
        "operationId": "c2fdc7795d753229ba8a654d88360515",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          },
          {
            "$ref": "#/components/parameters/asp_id"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/account/{identificator}/autoreply": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Get autoreply info for mail account",
        "operationId": "e8edec78d72e2ac55081fb517620ce75",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccountAutoreply"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "E-mail"
        ],
        "summary": "Update autoreply for mail account",
        "operationId": "44ca6e25dca777a775511dd3aef7d333",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailAccountAutoreply"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccountAutoreply"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/forwarder/{identificator}/autoreply": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Get autoreply info for mail forwarder",
        "operationId": "1bd47f53781392cb2f3058f640dbcf69",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccountAutoreply"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "E-mail"
        ],
        "summary": "Update autoreply for mail forwarder",
        "operationId": "c296a0e1308e44d8fdb888a7dc9a9b8a",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailAccountAutoreply"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccountAutoreply"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/account/{identificator}/premium": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Get specific E-mail accounts premium status",
        "operationId": "ddb0244ccc01877304bd460b07418924",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccountPremium"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "E-mail"
        ],
        "summary": "Turn on/off specific E-mail accounts premium package",
        "operationId": "2ef41c837f1653a757e3a507e74f3ea8",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "package": {
                    "description": "Package handle of the premium package to be activated (use OPTIONS call to see available package handles)",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "E-mail account package updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccountPremium"
                  }
                }
              }
            }
          },
          "204": {
            "description": "E-mail account package updated"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "E-mail"
        ],
        "summary": "See available premium packages for specific E-mail account or new account (enter @Virtserver.Name as identificator)",
        "operationId": "fa57c8ff952f86b7b7879123a358800a",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailAccountPremium"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/zonecloud": {
      "get": {
        "tags": [
          "ZoneCloud"
        ],
        "summary": "Display listing of ZoneCloud accounts",
        "operationId": "b910e986f4509643ba02a059c1f6824a",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          },
          {
            "$ref": "#/components/parameters/x-order-by"
          },
          {
            "$ref": "#/components/parameters/x-order-dir"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/zonecloud"
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid pager info"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "ZoneCloud"
        ],
        "summary": "Update ZoneCloud account",
        "operationId": "35183dc9e18ddcf633cebb2ca967a5fd",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/zonecloud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/zonecloud"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/zonecloud/{identificator}": {
      "get": {
        "tags": [
          "ZoneCloud"
        ],
        "summary": "Get specific ZoneCloud account",
        "operationId": "08f71155dde9c3f8cb092de48bbba52b",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/zonecloud"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "ZoneCloud"
        ],
        "summary": "Display available zonecloud options for specific ZoneCloud account",
        "operationId": "e80b40ec0d09401adbcd6febc529c5e0",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/zonecloud"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/mail/dkim": {
      "get": {
        "tags": [
          "E-mail"
        ],
        "summary": "Get webhosting DKIM public key",
        "operationId": "af3e60eedb5283272e4ef5a8e7bcb267",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "E-mail"
        ],
        "summary": "Activate DKIM signing for webhosting domain",
        "operationId": "d1160c0035a50e385648c26fa58b9f7e",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "E-mail"
        ],
        "summary": "Delete DKIM key from webhosting",
        "operationId": "4170fe26a95c86ed3dbe69ecb1de0129",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/mysql/account": {
      "get": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get MySQL account list",
        "operationId": "3f7662a85913129e8fe72fb776d0ee33",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLAccount"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "MySQL"
        ],
        "summary": "Add new MySQL account",
        "description": "***username*** field will be used as suffix for virtual server based name. When prefix is given inside name, then it's automatically detected",
        "operationId": "webhostingmysqldatabaseaccountcreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MySQLAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLAccount"
                  }
                }
              }
            }
          },
          "402": {
            "description": "package upgrade required"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/mysql/account/{database_username}": {
      "get": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get MySQL account",
        "operationId": "83bbff5a6e446756556bd3f1c528d5d7",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLAccount"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "MySQL"
        ],
        "summary": "Update MySQL account",
        "description": "only ***comment, password*** and ***hosts*** can be updated",
        "operationId": "b41132d4fb198a0395ccb2892c8909db",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MySQLAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLAccount"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MySQL"
        ],
        "summary": "Delete MySQL account",
        "operationId": "904801212aafae557b5e78ee5dec2f0b",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/mysql": {
      "get": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get MySQL Database list",
        "operationId": "eab612acc58c578de963ec57c7de5004",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLDatabase"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "MySQL"
        ],
        "summary": "Add new MySQL database",
        "description": "***name*** field will be used as suffix for virtual server based name. When prefix is given inside name, then it's automatically detected",
        "operationId": "webhostingmysqldatabasecreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MySQLDatabase"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLDatabase"
                  }
                }
              }
            }
          },
          "402": {
            "description": "Package upgrade required"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get database options",
        "description": "Currently returns available collations for database creation",
        "operationId": "f3f5e3bf505cb56aeb3a3c28d2ae9a6f",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/mysql/{database_name}": {
      "get": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get MySQL Database",
        "operationId": "958f45fe1464d26910bd5efbc334c4c4",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLDatabase"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MySQL"
        ],
        "summary": "Delete MySQL database",
        "operationId": "4b307020424387d913254ccef3589eb3",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_name"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/mysql/account/{database_username}/permission": {
      "get": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get all SQL account permissions",
        "description": "Get all account detailed permissions to all databases that it has access",
        "operationId": "40a84f44588daa452ec552a5139cc59c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLPermission"
                  }
                }
              }
            }
          },
          "404": {
            "description": "database or account not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "options": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get available permissions for SQL account",
        "description": "Get list of supported MySQL permissions for this account",
        "operationId": "16217b302d0959cc59a2e775b010846b",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "database account not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/database/mysql/account/{database_username}/permission/{database_name}": {
      "get": {
        "tags": [
          "MySQL"
        ],
        "summary": "Get SQL account permissions for specific database",
        "description": "Get all account detailed permissions to given database",
        "operationId": "031dbdc081e020b8a8a8974ee2ac53cc",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          },
          {
            "$ref": "#/components/parameters/database_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLPermission"
                  }
                }
              }
            }
          },
          "404": {
            "description": "database or account not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "MySQL"
        ],
        "summary": "Set SQL account permissions for specific database",
        "operationId": "f70961177017be81d56ee44c4b0a19ac",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          },
          {
            "$ref": "#/components/parameters/database_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MySQLPermission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MySQLPermission"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MySQL"
        ],
        "summary": "Remove SQL account permissions for specific database",
        "operationId": "ae8eebb718bc46941ef68bfa72fe2dbb",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/database_username"
          },
          {
            "$ref": "#/components/parameters/database_name"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "database or account not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/portforward/{identificator}/acl": {
      "post": {
        "tags": [
          "Port forward"
        ],
        "summary": "Add IP address to access list",
        "operationId": "61867686f90f70411a3487eba4e3c5eb",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerPortForwardAcl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerPortForwardAcl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/portforward/{identificator}/acl/{acl_ip_identificator}": {
      "delete": {
        "tags": [
          "Port forward"
        ],
        "summary": "Delete IP address from access list",
        "operationId": "aafddf0c5176cec594dcd146c3a1159e",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          },
          {
            "$ref": "#/components/parameters/acl_ip_identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/portforward/{identificator}": {
      "get": {
        "tags": [
          "Port forward"
        ],
        "summary": "Get single port forward ",
        "operationId": "4a363128bf435b8fcb09840a40398de3",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerPortForward"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Port forward"
        ],
        "summary": "Save port forward",
        "operationId": "15383b5fe963233d1b97a4e27eba6310",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerPortForward"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerPortForward"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Port forward"
        ],
        "summary": "Delete port forward",
        "operationId": "cf8abddd186cba959f18237e03677683",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/portforward": {
      "get": {
        "tags": [
          "Port forward"
        ],
        "summary": "Get port forwards",
        "operationId": "68d60f5fc7743850d9e044e4343bfc98",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerPortForward"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Port forward"
        ],
        "summary": "Add new port forward",
        "operationId": "83fb7b0c3aed00963694e4dac026ff5c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerPortForward"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Array",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerPortForward"
                  }
                }
              }
            }
          },
          "400": {
            "description": "operation not supported"
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/ssh/publickey": {
      "get": {
        "tags": [
          "SSH"
        ],
        "summary": "Show all public keys",
        "operationId": "70f21256545c846499ba4556ff9a355c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHPublicKey"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "SSH"
        ],
        "summary": "Create public key",
        "operationId": "9f66c14e10546cd3cb00cc3637b1850a",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerSSHPublicKey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHPublicKey"
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/ssh/publickey/{identificator}": {
      "get": {
        "tags": [
          "SSH"
        ],
        "summary": "Show single public key",
        "operationId": "e568268126a5daae4c085fdd5384104c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHPublicKey"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SSH"
        ],
        "summary": "Delete public key",
        "operationId": "0e08521fa94141c6de46997b12a8f21c",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/ssh": {
      "get": {
        "tags": [
          "SSH"
        ],
        "summary": "Show ssh settings",
        "operationId": "00f5ba257c0672876474e0c207433e64",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHUser"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "SSH"
        ],
        "summary": "Update ssh settings",
        "operationId": "83494ecc32103db71b0c92f8c6e0f28a",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerSSHUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHUser"
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/ssh/whitelist": {
      "get": {
        "tags": [
          "SSH"
        ],
        "summary": "Show whitelisted IP addresses",
        "operationId": "3d310389344dc5961d26fcc0770bfeed",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHWhitelistIP"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "SSH"
        ],
        "summary": "Add IP to whitelist",
        "operationId": "e74b244bf6aba9d3881b6b7badd3eab0",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerSSHWhitelistIP"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHWhitelistIP"
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/ssh/whitelist/{identificator}": {
      "get": {
        "tags": [
          "SSH"
        ],
        "summary": "Show single whitelisted IP address",
        "operationId": "35f6ae403a418746ec83544b6cf83e90",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSHWhitelistIP"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SSH"
        ],
        "summary": "Delete IP from whitelist",
        "operationId": "6f561a60a850338703cf80f3ce6ff6c8",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/ssl/{identificator}": {
      "get": {
        "tags": [
          "SSL"
        ],
        "summary": "Get specific SSL from this webhosting server",
        "operationId": "eecdb13f1540fb1f8a3e796cffe2bc23",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSLCerificate"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "SSL"
        ],
        "summary": "Update certificate data",
        "operationId": "db7a991c6fe74adf4ba84ea190dac8d4",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerSSLCerificate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSLCerificate"
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SSL"
        ],
        "summary": "Delete SSL certificate",
        "operationId": "d465e17600b02882409e8dae28d14825",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/ssl": {
      "get": {
        "tags": [
          "SSL"
        ],
        "summary": "Get all SSL certificates that are added to this webhosting server",
        "operationId": "450a7758fd4a3cfb2609981353a27dc3",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSLCerificate"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "SSL"
        ],
        "summary": "Add new SSL certificate",
        "operationId": "a7afb9572fcbd7f87ecffa3b8bf12cd2",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VServerSSLCerificate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VServerSSLCerificate"
                  }
                }
              }
            }
          },
          "422": {
            "description": "invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/turbo/{identificator}": {
      "get": {
        "tags": [
          "Webhosting"
        ],
        "summary": "Display listing of turbos for webhosting service",
        "operationId": "438c0b5174df54ad1c81afe6b631dfbf",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          },
          {
            "$ref": "#/components/parameters/identificator"
          },
          {
            "$ref": "#/components/parameters/x-pager-page"
          },
          {
            "$ref": "#/components/parameters/x-pager-limit"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Turbo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Out of pager bounds"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/turbo": {
      "post": {
        "tags": [
          "Webhosting"
        ],
        "summary": "Add turbo for specific webhosting server",
        "operationId": "bc9b26a1d48ce840e73ee59a5747479e",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Turbo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Turbo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Active turbo already exists"
          },
          "422": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/vserver/{service_name}/serverinfo": {
      "get": {
        "tags": [
          "Webhosting"
        ],
        "summary": "Display specific webhosting server information",
        "operationId": "4d6d59882a207ca70a17a66abf2284e4",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_name"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServerInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not supported"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CloudOrder": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "status": {
            "description": "Current processing status",
            "type": "string",
            "readOnly": true
          },
          "datacenter": {
            "description": "Datacenter",
            "type": "string",
            "nullable": true
          },
          "package": {
            "description": "Package",
            "type": "string"
          },
          "package_human": {
            "description": "Package (human readable)",
            "type": "string",
            "readOnly": "true"
          },
          "os": {
            "description": "Operating System",
            "type": "string"
          },
          "os_human": {
            "description": "Operating System (human readable)",
            "type": "string",
            "readOnly": "true"
          },
          "billing_period": {
            "description": "Billing period in months",
            "type": "integer"
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "container": {
            "description": "Created container name/identificator",
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "ssh_public_key": {
            "description": "SSH public key for login",
            "type": "string",
            "nullable": true
          }
        },
        "type": "object"
      },
      "Vm": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "availability_zone": {
            "description": "Avaliability zone",
            "type": "string",
            "readOnly": true
          },
          "os_human": {
            "description": "OS human readable name with version",
            "type": "string",
            "readOnly": true
          },
          "os_version": {
            "description": "OS version",
            "type": "string",
            "readOnly": true
          },
          "os_name": {
            "description": "OS name",
            "type": "string",
            "readOnly": true
          },
          "os_arch": {
            "description": "OS arch",
            "type": "string",
            "readOnly": true
          },
          "username": {
            "description": "Default OS username",
            "type": "string",
            "readOnly": true
          },
          "platform": {
            "description": "VM internal platfrom",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "Name",
            "type": "string",
            "readOnly": true
          },
          "label": {
            "description": "User defined label",
            "type": "string"
          },
          "host": {
            "description": "Host",
            "type": "string",
            "readOnly": true
          },
          "ip": {
            "description": "IP",
            "type": "string",
            "readOnly": true
          },
          "identificator": {
            "description": "Identificator (name)",
            "type": "integer",
            "readOnly": true
          },
          "package": {
            "description": "Name of the package this cloudserver is using",
            "type": "integer",
            "readOnly": true
          },
          "package_shared_id": {
            "description": "Id of the package this cloudserver is using",
            "type": "integer",
            "readOnly": true
          },
          "state": {
            "description": "State when available",
            "type": "string",
            "readOnly": true
          },
          "disk": {
            "description": "Disk size in bytes",
            "type": "integer",
            "readOnly": true
          },
          "ram": {
            "description": "Memory size in bytes",
            "type": "integer",
            "readOnly": true
          },
          "cpu": {
            "description": "vCPU count",
            "type": "integer",
            "readOnly": true
          },
          "suspended": {
            "description": "Service is suspended",
            "type": "boolean",
            "readOnly": true
          },
          "delegated": {
            "description": "Username of the vm service owner if delegated",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ARecord": {
        "title": "ARecord",
        "allOf": [
          {
            "properties": {
              "destination": {
                "description": "IPv4",
                "type": "string",
                "example": "123.123.123.123"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "AAAARecord": {
        "title": "AAAARecord",
        "allOf": [
          {
            "properties": {
              "destination": {
                "description": "IPv6",
                "type": "string",
                "example": "2001:db8:1234:0000:0000:0000:0000:0000"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ARecord"
          }
        ]
      },
      "CAARecord": {
        "title": "CAARecord",
        "allOf": [
          {
            "properties": {
              "destination": {
                "description": "Value",
                "type": "string",
                "example": "letsencrypt.org"
              },
              "flag": {
                "description": "Flag",
                "type": "integer",
                "example": 0
              },
              "tag": {
                "description": "Tag",
                "type": "string",
                "example": "issue"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "CNAMERecord": {
        "title": "CNAMERecord",
        "allOf": [
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "MXRecord": {
        "title": "MXRecord",
        "allOf": [
          {
            "properties": {
              "priority": {
                "description": "Priority",
                "type": "integer"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "NSRecord": {
        "title": "NSRecord",
        "allOf": [
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "Record": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "destination": {
            "description": "Destination",
            "type": "string",
            "example": "server.example.com"
          },
          "id": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true,
            "example": "123"
          },
          "name": {
            "description": "Hostname",
            "type": "string",
            "example": "prefix.example.com"
          },
          "delete": {
            "description": "Can this record be deleted",
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "modify": {
            "description": "Can this record be modified",
            "type": "boolean",
            "readOnly": true,
            "example": true
          }
        },
        "type": "object"
      },
      "SRVRecord": {
        "title": "SRVRecord",
        "allOf": [
          {
            "properties": {
              "priority": {
                "description": "Priority",
                "type": "integer",
                "example": 10
              },
              "weight": {
                "description": "Weight",
                "type": "integer",
                "example": 20
              },
              "port": {
                "description": "Port",
                "type": "integer",
                "example": 443
              },
              "destination": {
                "description": "Target",
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "SSHFPRecord": {
        "title": "SSHFPRecord",
        "allOf": [
          {
            "properties": {
              "algorithm": {
                "description": "Algorithm: 1=RSA, 2=DSA, 3=ECDSA, 4=Ed25519",
                "type": "integer",
                "example": 1
              },
              "type": {
                "description": "Type: 1=SHA-1, 2=SHA-256",
                "type": "integer",
                "example": 1
              },
              "destination": {
                "description": "Fingerprint",
                "type": "string",
                "example": "5f2f2e0676798a0273572bc77b99d6319a560fd5"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "TLSARecord": {
        "title": "TLSARecord",
        "allOf": [
          {
            "properties": {
              "certificate_usage": {
                "description": "Certificate usage: 0-3",
                "type": "integer",
                "example": 1
              },
              "selector": {
                "description": "selector: 0-1",
                "type": "integer",
                "example": 1
              },
              "matching_type": {
                "description": "Matching type: 0-2",
                "type": "integer",
                "example": 1
              },
              "destination": {
                "description": "Certificate Association Data",
                "type": "string",
                "example": "20DE66D3B3BDDB54E6C20BD9F288DB3FC080596096CB9066999FF610575E6FA5"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "TXTRecord": {
        "title": "TXTRecord",
        "allOf": [
          {
            "properties": {
              "destination": {
                "description": "TXT content value",
                "type": "string",
                "example": "Some example text content added here"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "DnsRecordUrl": {
        "title": "DnsRecordUrl",
        "description": "Custom non-standard DNS record to redirect hostnames to URL's. Name cannot be same as A/AAAA and CNAME ones.",
        "allOf": [
          {
            "properties": {
              "destination": {
                "description": "URL where hostname is redirected to",
                "type": "string",
                "example": "https://www.example.com"
              },
              "type": {
                "description": "Redirect HTTP redirect status code. Accepted values are 301 and 302",
                "type": "integer",
                "default": "301",
                "example": "301"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Record"
          }
        ]
      },
      "ZoneFile": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "content": {
            "description": "Zonefile content",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DNSZone": {
        "title": "DNSZone",
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "string",
            "readOnly": true
          },
          "active": {
            "description": "Is zone active",
            "type": "boolean",
            "example": true
          },
          "ipv6": {
            "description": "Are ipv6 records allowed",
            "type": "boolean",
            "example": false
          }
        },
        "type": "object"
      },
      "DomainContact": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "role": {
            "description": "Role",
            "type": "string",
            "enum": [
              "registrant",
              "tech",
              "admin"
            ]
          },
          "type": {
            "description": "Type",
            "type": "string"
          },
          "first_name": {
            "description": "First name",
            "type": "string"
          },
          "last_name": {
            "description": "Last name",
            "type": "string"
          },
          "name": {
            "description": "Full name",
            "type": "string"
          },
          "organization": {
            "description": "Organization",
            "type": "string"
          },
          "email": {
            "description": "E-mail",
            "type": "string"
          },
          "voice": {
            "description": "Phone",
            "type": "string"
          },
          "fax": {
            "description": "Fax",
            "type": "string"
          },
          "country": {
            "description": "Country",
            "type": "string"
          },
          "state": {
            "description": "State",
            "type": "string"
          },
          "city": {
            "description": "City",
            "type": "string"
          },
          "street": {
            "description": "Street",
            "type": "string"
          },
          "postalcode": {
            "description": "Postal code",
            "type": "string"
          },
          "ext_language": {
            "description": "Language",
            "type": "string"
          },
          "ext_ident": {
            "description": "Identification number",
            "type": "string"
          },
          "ext_ident_type": {
            "description": "Identification type",
            "type": "string",
            "enum": [
              "private_number",
              "company_number",
              "birthday"
            ]
          },
          "ext_ident_cc": {
            "description": "Identification country code",
            "type": "string"
          },
          "ext_vatnr": {
            "description": "VAT number",
            "type": "string"
          },
          "ext_department": {
            "description": "Department",
            "type": "string"
          },
          "ext_passport": {
            "description": "Passport",
            "type": "string"
          },
          "ext_legal_form": {
            "description": "Legal form",
            "type": "string"
          },
          "registry_handle": {
            "description": "The domain holder's ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Domain": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "Domain name",
            "type": "string",
            "readOnly": true
          },
          "delegated": {
            "description": "Username of the domain owner if delegated",
            "type": "string",
            "readOnly": true
          },
          "expires": {
            "description": "When does this domain expire",
            "type": "string",
            "readOnly": true
          },
          "dnssec": {
            "description": "Dnssec",
            "type": "boolean",
            "readOnly": true
          },
          "autorenew": {
            "description": "Is domain autorenew enabled",
            "type": "boolean",
            "readOnly": true
          },
          "renew_order": {
            "description": "False if not renewable domain, null if no pending order or order_id",
            "type": "string",
            "readOnly": true
          },
          "renewal_notifications": {
            "description": "Are renewal reminders turned on",
            "type": "boolean"
          },
          "has_pending_trade": {
            "description": "Domain has a pending trade operation",
            "type": "integer|null",
            "readOnly": true
          },
          "has_pending_dnssec": {
            "description": "Domain has a pending dnssec change",
            "type": "boolean",
            "readOnly": true
          },
          "reactivate": {
            "description": "Can this domain be reactivated",
            "type": "boolean",
            "readOnly": true
          },
          "auth_key_enabled": {
            "description": "Does this TLD use authorization key",
            "type": "boolean",
            "readOnly": true
          },
          "signing_required": {
            "description": "Signing required",
            "type": "boolean"
          },
          "nameservers_custom": {
            "description": "If domain uses custom nameservers, only false allowed",
            "type": "boolean"
          },
          "_links": {
            "description": "Relations",
            "type": "array",
            "items": {
              "properties": {
                "nameserver": {
                  "type": "string"
                },
                "contact": {
                  "type": "string"
                },
                "webhosting": {
                  "type": "string|null"
                }
              },
              "type": "object"
            },
            "readOnly": true
          }
        },
        "type": "object"
      },
      "DomainPreferences": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "renewal_notifications": {
            "description": "Are renewal reminders turned on",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DomainNameserver": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "hostname": {
            "description": "Hostname",
            "type": "string"
          },
          "ip": {
            "description": "IP address",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "Order": {
        "properties": {
          "identificator": {
            "description": "***identificator***",
            "type": "string",
            "readOnly": true
          },
          "errors": {
            "description": "Number of failed rows. null when none",
            "type": "string",
            "readOnly": true
          },
          "datetime_ordered": {
            "description": "Date and time the order was created in",
            "type": "string",
            "format": "ISO 8601 date",
            "readOnly": true
          },
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OrderRow": {
        "properties": {
          "identificator": {
            "description": "***identificator***",
            "type": "string",
            "readOnly": true
          },
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "error": {
            "description": "Error message id",
            "type": "string",
            "readOnly": true
          },
          "error_params": {
            "description": "Error message parameters",
            "type": "array",
            "items": {
              "properties": {
                "error_params": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "description": "key/value array of errors",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "type": "object"
      },
      "VServerApplication": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "id": {
            "description": "Application id",
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "description": "Application name",
            "type": "string"
          },
          "status": {
            "description": "Application status",
            "type": "string",
            "readOnly": true
          },
          "enabled": {
            "description": "Application is enabled",
            "type": "boolean",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "VServerElasticApplication": {
        "allOf": [
          {
            "properties": {
              "password": {
                "description": "Elastic auth key.",
                "type": "string"
              },
              "name": {
                "description": "Informational name",
                "type": "string"
              },
              "disk_size": {
                "description": "Disk size in bytes",
                "type": "integer",
                "readOnly": "true"
              },
              "disk_usage": {
                "description": "Disk usage in bytes",
                "type": "integer",
                "readOnly": "true"
              }
            }
          },
          {
            "$ref": "#/components/schemas/VServerApplication"
          }
        ]
      },
      "VServerNodejsApplication": {
        "allOf": [
          {
            "properties": {
              "home_dir": {
                "description": "Application main instance home dir",
                "type": "string",
                "readOnly": true
              },
              "scriptname": {
                "description": "Application script name",
                "type": "string"
              },
              "memory_limit": {
                "description": "Application max memory usage",
                "type": "integer"
              },
              "available_memory": {
                "description": "Allocatable memory for application",
                "type": "integer",
                "readOnly": true
              }
            }
          },
          {
            "$ref": "#/components/schemas/VServerApplication"
          }
        ]
      },
      "VServerRedisApplication": {
        "allOf": [
          {
            "properties": {
              "password": {
                "description": "Redis auth key",
                "type": "string"
              },
              "port": {
                "description": "Redis port",
                "type": "string"
              },
              "ip": {
                "description": "IP address",
                "type": "string",
                "readOnly": true
              },
              "host": {
                "description": "Hostname",
                "type": "string",
                "readOnly": true
              }
            }
          },
          {
            "$ref": "#/components/schemas/VServerApplication"
          }
        ]
      },
      "VServerScript": {
        "description": "Startup or one-time execution scripts",
        "allOf": [
          {
            "properties": {
              "home_dir": {
                "description": "Script home dir",
                "type": "string",
                "readOnly": true
              },
              "script": {
                "description": "Script to execute",
                "type": "string"
              },
              "execute_at": {
                "description": "Autostart after reboot",
                "type": "string"
              },
              "log_output": {
                "description": "Log last run output",
                "type": "boolean"
              },
              "output": {
                "description": "last run ouput",
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/VServerApplication"
          }
        ]
      },
      "WebhostingBilling": {
        "properties": {
          "package": {
            "description": "package",
            "type": "string",
            "readOnly": true
          },
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "AdditionalPackage": {
        "title": "AdditionalPackage",
        "properties": {
          "identificator": {
            "description": "***identificator***",
            "type": "string",
            "readOnly": true
          },
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "package": {
            "description": "Additional package uname",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "Additional package name",
            "type": "string",
            "readOnly": true
          },
          "quantity": {
            "description": "Additional package quantity",
            "type": "integer",
            "readOnly": false
          }
        },
        "type": "object"
      },
      "VServerCrontab": {
        "title": "VServerCrontab",
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "description": "Name",
            "type": "string"
          },
          "type": {
            "description": "Crontab type (http/system)",
            "type": "string",
            "enum": [
              "http",
              "system"
            ]
          },
          "active": {
            "description": "Is active",
            "type": "boolean"
          },
          "report": {
            "description": "When to send report",
            "type": "string",
            "enum": [
              "never",
              "onerror",
              "onoutputorerror",
              "onoutput",
              "always"
            ]
          },
          "report_email": {
            "description": "Report e-mail",
            "type": "string"
          },
          "command": {
            "description": "Crontab command location (url or path)",
            "type": "string"
          },
          "priority": {
            "description": "Priority",
            "type": "string",
            "enum": [
              "low",
              "normal"
            ]
          },
          "schedule": {
            "description": "Schedule",
            "type": "string"
          },
          "timezone": {
            "description": "Timezone (only available when type==system)",
            "type": "string",
            "enum": [
              "UTC",
              "Europe/Tallinn",
              "Europe/Amsterdam",
              "Europe/Helsinki"
            ]
          },
          "runtime_limit": {
            "description": "Runtime limit in seconds (only available when type==system)",
            "type": "integer",
            "enum": [
              900,
              1800,
              3600,
              10800,
              86340
            ]
          }
        },
        "type": "object"
      },
      "VServerDedicatedIP": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string"
          },
          "ipv4": {
            "description": "IPv4",
            "type": "string"
          },
          "ipv6": {
            "description": "IPv6",
            "type": "string"
          },
          "vhosts": {
            "description": "Virtual hosts where this IP is used",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "DnsDefault": {
        "title": "DnsDefault"
      },
      "MailAccount": {
        "title": "MailAccount",
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "address": {
            "description": "***identificator*** E-mail address (domain is in unicode format)",
            "type": "string"
          },
          "password": {
            "description": "Length: 10-64 digits.",
            "type": "string",
            "writeOnly": true
          },
          "comment": {
            "description": "Comment",
            "type": "string"
          },
          "disk_size": {
            "description": "Mailbox size in bytes",
            "type": "integer",
            "readOnly": true
          },
          "disk_size_human": {
            "description": "Mailbox size in human readable form",
            "type": "string",
            "readOnly": true
          },
          "disk_usage": {
            "description": "Mailbox usage in bytes",
            "type": "integer",
            "readOnly": true
          },
          "disk_usage_human": {
            "description": "Mailbox usage in human readable form",
            "type": "string",
            "readOnly": true
          },
          "disk_usage_updated": {
            "description": "Disk usage update datetime in ISO 8601 format",
            "type": "string",
            "readOnly": true
          },
          "fwd_addresses": {
            "description": "Forward list",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoreply": {
            "description": "Autoreply enabled state",
            "type": "boolean",
            "readOnly": true
          },
          "spamlevel": {
            "description": "Spamfilter level",
            "type": "string",
            "enum": [
              "none",
              "low",
              "medium",
              "high"
            ]
          },
          "two_factor_auth": {
            "description": "2-factor authentication state. Can only be set to false from API",
            "type": "boolean"
          },
          "deleted_at": {
            "description": "Date and time the account was archived",
            "type": "string",
            "format": "ISO 8601 date",
            "readOnly": true
          },
          "addresses": {
            "description": "Mail account associated addresses",
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ApplicationPassword": {
        "properties": {
          "identificator": {
            "description": "***identificator***",
            "type": "string",
            "readOnly": true
          },
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "type": {
            "description": "Account type",
            "type": "string",
            "enum": [
              "zmail",
              "zonecloud"
            ],
            "readOnly": true
          },
          "name": {
            "description": "Application specific password description",
            "type": "string",
            "readOnly": true
          },
          "scopes": {
            "description": "Allowed scopes for the Application Password",
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "created": {
            "description": "Application password created timestamp",
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "last_used": {
            "description": "Datestring of last use or false if password has not been used",
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        },
        "type": "object"
      },
      "MailAccountAutoreply": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "is_enabled": {
            "description": "Is enabled",
            "type": "boolean"
          },
          "fromname": {
            "description": "Autoreply from name",
            "type": "string"
          },
          "subject": {
            "description": "Autoreply subject",
            "type": "string"
          },
          "body": {
            "description": "Autoreply body",
            "type": "string"
          },
          "datestart": {
            "description": "Autoreply start date (yyyy-mm-dd)",
            "type": "string",
            "format": "date"
          },
          "dateend": {
            "description": "Autoreply end date (yyyy-mm-dd)",
            "type": "string",
            "format": "date"
          }
        },
        "type": "object"
      },
      "MailForwarder": {
        "title": "MailForwarder",
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "address": {
            "description": "E-mail address",
            "type": "string"
          },
          "comment": {
            "description": "Comment",
            "type": "string"
          },
          "fwd_addresses": {
            "description": "Forward list",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoreply": {
            "description": "Autoreply enabled state",
            "type": "boolean",
            "readOnly": true
          },
          "mail_to_http_url": {
            "description": "URL where email is posted to",
            "type": "string",
            "readOnly": true
          },
          "change_pw_disabled": {
            "description": "Disable password change in webmail",
            "type": "boolean",
            "readOnly": true
          },
          "webmail_fw_disabled": {
            "description": "Disable forward in webmail",
            "type": "boolean",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MailAccountPremium": {
        "properties": {
          "package": {
            "description": "Premium package handle or 'none' if not premium",
            "type": "string",
            "readOnly": true
          },
          "package_allowed": {
            "description": "Indicates if package can be enabled",
            "type": "boolean",
            "readOnly": true
          },
          "disk_size": {
            "description": "Premium package allowed disk size in bytes",
            "type": "integer",
            "readOnly": true
          },
          "disk_size_human": {
            "description": "Premium package allowed human readable disk size",
            "type": "string",
            "readOnly": true
          },
          "price_month": {
            "description": "Premium package month price excluding VAT",
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "price_year": {
            "description": "Premium package year price excluding VAT",
            "type": "number",
            "format": "float",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "zonecloud": {
        "properties": {
          "identificator": {
            "description": "E-mail address",
            "type": "string",
            "readOnly": true
          },
          "premium": {
            "description": "ZoneCloud Premium is in use",
            "type": "boolean"
          },
          "disk_size": {
            "description": "ZoneCloud disk size",
            "type": "string",
            "readOnly": true
          },
          "disk_size_human": {
            "description": "ZoneCloud disk size in gibibytes",
            "type": "string",
            "readOnly": true
          },
          "disk_usage_percent_human": {
            "description": "ZoneCloud disk usage",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "VServerEmailDKIM": {
        "properties": {
          "identificator": {
            "description": "***identificator***",
            "type": "string",
            "readOnly": true
          },
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MySQLAccount": {
        "title": "MySQLAccount",
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "username": {
            "description": "***identificator*** readonly in update mode",
            "type": "string",
            "example": "dnXXX_myname"
          },
          "comment": {
            "description": "User assigned comment to account",
            "type": "string",
            "example": "New database for development application"
          },
          "password": {
            "description": "Length: 10-64 digits.",
            "type": "string",
            "writeOnly": true,
            "example": "Rea11yS7r0ngPassw0rd"
          },
          "require_ssl": {
            "description": "Require SSL connection",
            "type": "boolean"
          },
          "hosts": {
            "description": "Array of IP's that can connect using this user.\n     Additional element can be added:\n     ***ws*** - webserver,\n     ***pma*** - phpmyadmin,\n     ***vpn*** - vpn and list of external IP's (IPv4 and IPv6 are supported)",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "MySQLDatabase": {
        "title": "MySQLDatabase",
        "required": [
          "name"
        ],
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "***identificator***",
            "type": "string"
          },
          "comment": {
            "description": "User assigned comment to database",
            "type": "string"
          },
          "collation": {
            "description": "Available only during creation. Defaults to utf8mb4_unicode_ci (check options request for available collations).",
            "type": "string"
          },
          "disk_usage": {
            "description": "Database disk usage in bytes",
            "type": "string",
            "readOnly": true
          },
          "disk_usage_human": {
            "description": "Database disk usage in human readable format",
            "type": "string",
            "readOnly": true
          },
          "disk_usage_updated": {
            "description": "Disk usage update datetime",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "MySQLPermission": {
        "title": "MySQLPermission",
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "username": {
            "description": "Database username",
            "type": "string",
            "readOnly": true
          },
          "database": {
            "description": "Database name",
            "type": "string",
            "readOnly": true
          },
          "permissions": {
            "description": "Attributes that are allowed for this database",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "VServerPortForwardAcl": {
        "properties": {
          "id": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "ip": {
            "description": "IP address",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VServerPortForward": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "id": {
            "description": "(deprecated use identificator)",
            "type": "integer",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "comment": {
            "description": "Name of host",
            "type": "string"
          },
          "ip": {
            "$ref": "#/components/schemas/VServerDedicatedIP"
          },
          "fport": {
            "description": "From port",
            "type": "integer"
          },
          "dport": {
            "description": "Destination port (is automatically filled with From port)",
            "type": "integer",
            "readOnly": true
          },
          "acl_enabled": {
            "description": "Is acl enabled",
            "type": "boolean"
          },
          "acls": {
            "description": "Access list ips and ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "VServerSSHPublicKey": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "comment": {
            "description": "Comment",
            "type": "string"
          },
          "created": {
            "description": "Created",
            "type": "string",
            "readOnly": true
          },
          "created_human": {
            "description": "Created date in human readable format",
            "type": "string",
            "readOnly": true
          },
          "fingerprint": {
            "description": "Fingerprint",
            "type": "string",
            "readOnly": true
          },
          "last_used": {
            "description": "Last used",
            "type": "string",
            "readOnly": true
          },
          "type": {
            "description": "Type",
            "type": "string",
            "readOnly": true
          },
          "size": {
            "description": "Size",
            "type": "integer",
            "readOnly": true
          },
          "public_key": {
            "description": "Content",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VServerSSHUser": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "description": "Username",
            "type": "string",
            "readOnly": true
          },
          "webhosts": {
            "description": "Webhosts",
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "server_fingerprints": {
            "description": "Server fingerprints",
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          },
          "access": {
            "description": "Access type",
            "type": "string",
            "enum": [
              "whitelist",
              "public"
            ]
          },
          "ipv4": {
            "description": "Server IPv4",
            "type": "string",
            "readOnly": true
          },
          "ipv6": {
            "description": "Server IPv6",
            "type": "string",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "VServerSSHWhitelistIP": {
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "identificator": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "ip": {
            "description": "IP (IPv4 or IPv6, supports prefix i.e. '217.128.0.0/24' etc)",
            "type": "string"
          },
          "comment": {
            "description": "Comment",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VServerSSLCerificate": {
        "title": "VServerSSLCerificate",
        "required": [
          "name",
          "certificate",
          "private_key"
        ],
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "id": {
            "description": "***identificator***",
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "description": "Certificate name",
            "type": "string"
          },
          "cn": {
            "description": "CN",
            "type": "string",
            "readOnly": true
          },
          "connected": {
            "description": "Connected to SSL cert in SSL services",
            "type": "boolean",
            "readOnly": true
          },
          "letsencrypt": {
            "description": "Is Let's Encrypt auto renewal certificate",
            "type": "boolean",
            "readOnly": true
          },
          "created": {
            "description": "Created datetime in ISO 8601 format",
            "type": "string",
            "readOnly": true
          },
          "private_key": {
            "description": "Private key",
            "type": "string"
          },
          "certificate": {
            "description": "Certificate contents",
            "type": "string"
          },
          "ca_certificate": {
            "description": "CA Certificate contents",
            "type": "string"
          },
          "expires": {
            "description": "Expire datetime in ISO 8601 format",
            "type": "string",
            "readOnly": true
          },
          "hosts": {
            "description": "Hosts where this certificate is used",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_links": {
            "description": "Relations",
            "type": "array",
            "items": {
              "properties": {
                "certificate": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true
          }
        },
        "type": "object"
      },
      "Turbo": {
        "title": "Turbo",
        "properties": {
          "identificator": {
            "description": "***identificator***",
            "type": "string",
            "readOnly": true
          },
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "start": {
            "description": "Date and time the additional package was added",
            "type": "string",
            "format": "ISO 8601 date",
            "nullable": true
          },
          "end": {
            "description": "Date and time the additional package was declined",
            "type": "string",
            "format": "ISO 8601 date",
            "readOnly": true
          },
          "active": {
            "description": "Is turbo active",
            "type": "boolean",
            "readOnly": true,
            "example": true
          },
          "ttl": {
            "description": "Length of time period for active turbo in minutes",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ServerInfo": {
        "title": "ServerInfo",
        "properties": {
          "resource_url": {
            "description": "API url to get this entity",
            "type": "string",
            "readOnly": true
          },
          "domain_name": {
            "description": "Name of webhosting server",
            "type": "string"
          },
          "domain_name_temporary": {
            "description": "Temporary hostname",
            "type": "string"
          },
          "ipv4": {
            "description": "IP",
            "type": "string"
          },
          "ipv6": {
            "description": "IPv6",
            "type": "string"
          },
          "homedir": {
            "description": "System user homedir",
            "type": "string"
          },
          "homedir_http": {
            "description": "Http homedir",
            "type": "string"
          },
          "homedir_https": {
            "description": "Https homedir",
            "type": "string"
          },
          "mysql_hostname": {
            "description": "Hostname for MySQL server",
            "type": "string"
          },
          "loopback_hostname": {
            "description": "Loopback address",
            "type": "string"
          },
          "loopback_ipv4": {
            "description": "Loopback IP",
            "type": "string"
          },
          "system_username": {
            "description": "Name of virtual server system user",
            "type": "string"
          },
          "bin_path_sendmail": {
            "description": "Sendmail path",
            "type": "string"
          },
          "bin_path_convert": {
            "description": "Convert path",
            "type": "string"
          },
          "pma_url": {
            "description": "PMA url",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "parameters": {
      "service_name": {
        "name": "service_name",
        "in": "path",
        "description": "Unique name of service",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "service_id": {
        "name": "service_id",
        "in": "path",
        "description": "Service numerical identificator of service in case human readable version of unique service name is not applicable",
        "required": true,
        "schema": {}
      },
      "zoneid": {
        "name": "zoneid",
        "in": "path",
        "description": "ZoneID username",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "identificator": {
        "name": "identificator",
        "in": "path",
        "description": "Unique identificator of requested resource. If applicable then human readable (for example domain name, hostname etc...), if not, then usually numeric ID. Marked as ***identificator*** in resource schema, otherwise same as resource **identificator** property.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "x-pager-page": {
        "name": "x-pager-page",
        "in": "header",
        "description": "Page number. Default is **1**.",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "x-pager-limit": {
        "name": "x-pager-limit",
        "in": "header",
        "description": "Items per page. Default is **10**. Maximum is **100**.",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "x-order-by": {
        "name": "x-order-by",
        "in": "header",
        "description": "Order by field name",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "x-order-dir": {
        "name": "x-order-dir",
        "in": "header",
        "description": "Order direction",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      },
      "in_progress": {
        "name": "in_progress",
        "in": "query",
        "description": "Filter only unfinished.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "name_host_ip_filter": {
        "name": "hostname",
        "in": "query",
        "description": "Filter by name, host or IP",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "vnc_details": {
        "name": "vnc",
        "in": "query",
        "description": "Show additional VNC information",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "disk_size": {
        "name": "disk",
        "in": "query",
        "description": "Disk size",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "ram_size": {
        "name": "ram",
        "in": "query",
        "description": "Ram size",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "vcpu_size": {
        "name": "vcpu",
        "in": "query",
        "description": "Virtual processor size",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "domain_name": {
        "name": "name",
        "in": "query",
        "description": "Only get domain names which contain the string",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "domain_is_renewable": {
        "name": "renewable",
        "in": "query",
        "description": "Show renewable domains for user",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "domain_is_delegated": {
        "name": "delegated",
        "in": "query",
        "description": "Filter domains by only delegated or only owner services.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "needs_renewal": {
        "name": "needs_renewal",
        "in": "query",
        "description": "Filter domains that will expire in 30 days.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "address": {
        "name": "address",
        "in": "query",
        "description": "Filter by address.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "archived": {
        "name": "archived",
        "in": "query",
        "description": "Display with archived accounts.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "addresses": {
        "name": "addresses",
        "in": "query",
        "description": "Display email account associated addresses.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "force": {
        "name": "force",
        "in": "query",
        "description": "Force delete email account.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "active_param": {
        "name": "active",
        "in": "query",
        "description": "Display with active turbo.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "row_id": {
        "name": "row_id",
        "in": "path",
        "description": "row identificator",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "hostname": {
        "name": "hostname",
        "in": "path",
        "description": "Hostname (main or subdomain)",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "database_name": {
        "name": "database_name",
        "in": "path",
        "description": "Database name",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "database_username": {
        "name": "database_username",
        "in": "path",
        "description": "Database account username",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "member_identificator": {
        "name": "member_identificator",
        "in": "path",
        "description": "Member identificator",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "acl_ip_identificator": {
        "name": "acl_ip_identificator",
        "in": "path",
        "description": "Acl IP identificator",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "asp_id": {
        "name": "asp_id",
        "in": "path",
        "description": "Application password identificator",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "servicepackage_id": {
        "name": "servicepackage_id",
        "in": "path",
        "description": "Additional package identificator",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "securitySchemes": {
      "basic_auth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "DNS Zone",
      "tags": [
        "DNS",
        "A record",
        "AAAA record",
        "NS record",
        "MX record",
        "CNAME record",
        "TXT record",
        "SSHFP record",
        "SRV record",
        "URL record",
        "CAA record",
        "TLSA record"
      ]
    },
    {
      "name": "Webhosting",
      "tags": [
        "E-mail",
        "MySQL",
        "SSL",
        "Crontab",
        "Redis",
        "PM2",
        "Port forward",
        "Dedicated IP",
        "Additional package",
        "SSH"
      ]
    },
    {
      "name": "Cloudservers",
      "tags": [
        "Cloudserver order"
      ]
    },
    {
      "name": "Domains",
      "tags": [
        "Domain",
        "Contact"
      ]
    }
  ]
}